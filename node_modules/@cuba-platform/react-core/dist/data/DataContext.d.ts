import { IObservableArray } from "mobx";
export interface DataContainer {
    entityName: string;
    changedItems: IObservableArray;
    status: DataContainerStatus;
}
export declare type DataContainerStatus = 'CLEAN' | 'LOADING' | 'DONE' | 'ERROR';
export declare type DataContainerError = 'COMMIT_ERROR' | 'LOAD_ERROR';
export interface Containers {
    [containerId: string]: DataContainer;
}
declare class DataContext<T extends Containers> {
    containers: T;
    constructor(containers: T);
    save: () => void;
    get hasChanges(): boolean;
}
export declare function data<T extends Containers>(containers: T): DataContext<T>;
export {};
