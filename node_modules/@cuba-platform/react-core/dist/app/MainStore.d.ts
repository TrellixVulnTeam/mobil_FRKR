import { IObservableArray } from "mobx";
import { CubaApp, EntityMessages, EnumInfo, MetaClassInfo } from "@cuba-platform/rest";
import { IReactComponent, IWrappedComponent } from "mobx-react";
import { Security } from './Security';
export declare class MainStore {
    private cubaREST;
    static NAME: string;
    /**
     * Whether the `MainStore` instance is initialized.
     */
    initialized: boolean;
    /**
     * Whether the user authenticated.
     */
    authenticated: boolean;
    /**
     * Whether the user is anonymous.
     */
    usingAnonymously: boolean;
    userName?: string;
    /**
     * Currently selected locale.
     */
    locale?: string;
    /**
     * Information about project entities.
     */
    metadata?: IObservableArray<MetaClassInfo>;
    /**
     * Localized entity messages.
     */
    messages?: EntityMessages;
    /**
     * Localized enums.
     */
    enums?: IObservableArray<EnumInfo>;
    security: Security;
    private metadataRequestCount;
    private messagesRequestCount;
    private enumsRequestCount;
    constructor(cubaREST: CubaApp);
    /**
     * `true` means that `MainStore` is in a state when entity data can be displayed (i.e. entity metadata,
     * localized entity messages, localized enums and permissions information has been loaded).
     */
    isEntityDataLoaded(): boolean;
    /**
     * Retrieves localized enums using REST API.
     */
    loadEnums(): void;
    /**
     * Retrieves entity metadata using REST API.
     */
    loadMetadata(): void;
    /**
     * Retrieves localized entity messages using REST API.
     */
    loadMessages(): void;
    /**
     * Changes the active locale for this frontend client application.
     *
     * @param locale - locale to be set as active.
     */
    setLocale: (locale: string) => void;
    get loginRequired(): boolean;
    login(login: string, password: string): Promise<void>;
    logout(): Promise<void>;
    /**
     * Initializes this `MainStore` instance.
     *
     * @returns a promise that resolves when initialization is complete.
     */
    initialize(): Promise<void>;
    private handleLocaleChange;
    private setSessionLocale;
}
export interface MainStoreInjected {
    mainStore?: MainStore;
}
export declare function injectMainStore<T extends IReactComponent>(target: T): T & IWrappedComponent<T>;
